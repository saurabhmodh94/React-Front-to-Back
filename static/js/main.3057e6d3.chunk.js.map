{"version":3,"sources":["reducers/contactReducer.js","reducers/index.js","actions/types.js","store.js","components/Contact/Contact.js","actions/contactActions.js","components/Contacts/Contacts.js","components/Pages/About.js","components/Pages/NotFound.js","components/Header/Header.js","components/TextInputGroup/TextInputGroup.js","components/AddContact/AddContact.js","components/Test/Test.js","components/EditContact/EditContact.js","App.js","index.js"],"names":["initialState","contacts","contact","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","filter","id","concat","toConsumableArray","map","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Contact","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onShowClick","name","e","setState","showContactInfo","onDeleteClick","props","deleteContact","inherits","createClass","key","value","_this$props$contact","phone","email","react_default","a","createElement","className","onClick","bind","style","cursor","color","float","Link","to","marginRight","Component","connect","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","wrap","_context2","prev","next","axios","delete","t0","console","log","finish","stop","_x2","Contacts","getContacts","Fragment","components_Contact_Contact","_ref","_callee","response","_context","get","sent","data","_x","About","match","params","NotFound","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","AddContact","errors","defineProperty","target","onSubmit","preventDefault","_this$state","new_contact","uuid","addContact","history","push","_this$state2","components_TextInputGroup_TextInputGroup","_ref3","_callee3","_context3","post","_x3","Test","title","body","_this2","fetch","then","json","EditContact","updated_contact","updateContact","nextProps","nextState","_nextProps$contact","getContact","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","put","_x5","App","react_redux_es","HashRouter","components_Header_Header","Switch","Route","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3057e6d3.chunk.js","sourcesContent":["import {\n  GET_CONTACTS,\n  DELETE_CONTACT,\n  ADD_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT\n} from '../actions/types';\n\nconst initialState = {\n  contacts: [],\n  contact: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case GET_CONTACT:\n      return {\n        ...state,\n        contact: action.payload\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? action.payload : contact\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport contactReducer from './contactReducer';\n\nexport default combineReducers({\n  contacts: contactReducer\n});\n","export const GET_CONTACTS = 'GET_CONTACTS';\nexport const DELETE_CONTACT = 'DELETE_CONTACTS';\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const GET_CONTACT = 'GET_CONTACT';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from 'react';\n// import axios from 'axios';\nimport { Link } from 'react-router-dom';\n// import { Consumer } from '../../context';\n\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../actions/contactActions';\n\nexport class Contact extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showContactInfo: true\n    };\n  }\n  // onShowClick(name, e) {\n  //   console.log(e, this.state, name);\n  // }\n  onShowClick = (name, e) => {\n    // console.log(e, this.state, name);\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n  // onDeleteClick = async (id, dispatch) => {\n  onDeleteClick = id => {\n    this.props.deleteContact(id);\n    // try {\n    //   await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}/`);\n    // } catch (e) {\n    //   console.log(e);\n    // } finally {\n    //   dispatch({ type: 'DELETE_CONTACT', payload: id });\n    // }\n    // .then(res => dispatch({ type: 'DELETE_CONTACT', payload: id }));\n  };\n  render() {\n    // return (\n    //   <Consumer>\n    //     {value => {\n    let { id, name, phone, email } = this.props.contact;\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4 className=\"list-group-item\">\n          {name}\n          <i\n            onClick={this.onShowClick.bind(this, name)}\n            className=\"fas fa-sort-down\"\n          />\n          <i\n            onClick={this.onDeleteClick.bind(this, id)}\n            className=\"fas fa-times\"\n            style={{ cursor: 'pointer', color: 'red', float: 'right' }}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: 'pointer',\n                float: 'right',\n                color: 'black',\n                marginRight: '1rem'\n              }}\n            />\n          </Link>\n        </h4>\n        {this.state.showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\"> Phone: {phone}</li>\n            <li className=\"list-group-item\"> Email: {email}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n    //     }}\n    //   </Consumer>\n    // );\n  }\n}\n\nexport default connect(\n  null,\n  { deleteContact }\n)(Contact);\n","import {\n  GET_CONTACTS,\n  DELETE_CONTACT,\n  ADD_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT\n} from './types';\nimport axios from 'axios';\nexport const getContacts = () => async dispatch => {\n  const response = await axios.get(\n    'https://jsonplaceholder.typicode.com/users'\n  );\n  dispatch({\n    type: GET_CONTACTS,\n    payload: response.data\n  });\n};\n\nexport const deleteContact = id => async dispatch => {\n  try {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}/`);\n  } catch (e) {\n    console.log(e);\n  } finally {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }\n};\n\nexport const addContact = contact => async dispatch => {\n  const response = await axios.post(\n    `https://jsonplaceholder.typicode.com/users/`,\n    contact\n  );\n  dispatch({\n    type: ADD_CONTACT,\n    payload: response.data\n  });\n};\n\nexport const getContact = id => async dispatch => {\n  const response = await axios.get(\n    `https://jsonplaceholder.typicode.com/users/${id}/`\n  );\n  dispatch({\n    type: GET_CONTACT,\n    payload: response.data\n  });\n};\n\nexport const updateContact = contact => async dispatch => {\n  const response = await axios.put(\n    `https://jsonplaceholder.typicode.com/users/${contact.id}/`,\n    contact\n  );\n  dispatch({\n    type: UPDATE_CONTACT,\n    payload: response.data\n  });\n};\n","import React, { Component } from 'react';\n// import { Consumer } from './../../context';\nimport Contact from './../Contact/Contact';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { GET_CONTACTS } from '../../actions/types';\nimport { getContacts } from '../../actions/contactActions';\n\nexport class Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    // return (\n    //   <Consumer>\n    //     {value => {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n    //     }}\n    //   </Consumer>\n    // );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.contacts\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   getContacts: () => dispatch({ type: GET_CONTACTS })\n// });\n\nexport default connect(\n  mapStateToProps,\n  { getContacts }\n)(Contacts);\n","import React from 'react';\n\nexport default props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n      {props.match.params.id}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = props => {\n  let { branding } = props;\n  // const brandingStyle = {\n  //   color: 'red'\n  // };\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n          <a href=\"/\" className=\"navbar-brand\">\n            {branding}\n          </a>\n          <div>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\">\n                  <i className=\"fas fa-home\" /> Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/contact/add\" className=\"nav-link\">\n                  <i className=\"fas fa-plus\" /> Add\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link\">\n                  <i className=\"fas fa-question\" /> About\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      {/*\n        <div style={{ fontSize: '20px' }}>\n          <h1 style={brandingStyle}> {branding} </h1>\n        </div>\n      */}\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'The App'\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={`${error ? 'is-invalid' : ''} form-control form-control-lg`}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\n// import axios from 'axios';\nimport TextInputGroup from './../TextInputGroup/TextInputGroup';\n// import { Consumer } from './../../context';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../actions/contactActions';\n\nclass AddContact extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   // this.nameInput = React.createRef();\n  // }\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  // onSubmit = async (dispatch, e) => {\n  onSubmit = e => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    // const name = this.nameInput.current.value;\n    const new_contact = {\n      id: uuid(),\n      name,\n      email,\n      phone\n    }; //ES6\n    // Check For Errors or Use required\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n    this.props.addContact(new_contact);\n    // const response = await axios.post(\n    //   `https://jsonplaceholder.typicode.com/users/`,\n    //   new_contact\n    // );\n    // // .then(res => dispatch({ type: 'ADD_CONTACT', payload: new_contact }));\n    // dispatch({ type: 'ADD_CONTACT', payload: response.data });\n\n    // clear state\n    // this.nameInput.current.value = '';\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    //redirect\n    this.props.history.push('/');\n  };\n  static defaultProps = {\n    name: ''\n  };\n  render() {\n    const { name, email, phone } = this.state;\n    // const { name } = this.props;\n\n    // return (\n    //   <Consumer>\n    //     {value => {\n    //       const { dispatch } = value;\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit.bind(this)}>\n            <TextInputGroup\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter Name...\"\n              // defaultValue={name}\n              // ref={this.nameInput}\n              // ref=\"nameInput\"\n              value={name}\n              onChange={this.onChange}\n              error={this.state.errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter Email...\"\n              value={email}\n              onChange={this.onChange}\n              error={this.state.errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              type=\"text\"\n              name=\"phone\"\n              placeholder=\"Enter Phone...\"\n              value={phone}\n              onChange={this.onChange}\n              error={this.state.errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n    //     }}\n    //   </Consumer>\n    // );\n  }\n}\n\nexport default connect(\n  null,\n  { addContact }\n)(AddContact);\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n    console.log('componentDidMount...', this.state);\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount...', this.state);\n  }\n\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...');\n  // }\n\n  // componentWillUpdate() {\n  //   console.log('componentWillUpdate...');\n  // }\n\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('componentWillReceiveProps...');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     test: 'something'\n  //   };\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log(' getSnapshotBeforeUpdate...');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    console.log('rendering...', this.state);\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\n// import axios from 'axios';\nimport TextInputGroup from './../TextInputGroup/TextInputGroup';\n// import { Consumer } from './../../context';\n\nimport { connect } from 'react-redux';\nimport { getContact, updateContact } from '../../actions/contactActions';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n  componentWillReceiveProps(nextProps, nextState) {\n    const { name, email, phone } = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone\n    });\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getContact(id);\n    // const response = await axios.get(\n    //   `https://jsonplaceholder.typicode.com/users/${id}`\n    // );\n    // this.setState({\n    //   name: response.data.name,\n    //   email: response.data.email,\n    //   phone: response.data.phone\n    // });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  // onSubmit = async (dispatch, e) => {\n  onSubmit = e => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check For Errors or Use required\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n    const updated_contact = {\n      id,\n      name,\n      email,\n      phone\n    }; //ES6\n\n    this.props.updateContact(updated_contact);\n    // const response = await axios.put(\n    //   `https://jsonplaceholder.typicode.com/users/${id}`,\n    //   new_contact\n    // );\n    // dispatch({ type: 'UPDATE_CONTACT', payload: response.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    //redirect\n    this.props.history.push('/');\n  };\n  static defaultProps = {\n    name: ''\n  };\n  render() {\n    const { name, email, phone } = this.state;\n    // const { name } = this.props;\n\n    // return (\n    //   <Consumer>\n    //     {value => {\n    //       const { dispatch } = value;\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit.bind(this)}>\n            <TextInputGroup\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter Name...\"\n              // defaultValue={name}\n              // ref={this.nameInput}\n              // ref=\"nameInput\"\n              value={name}\n              onChange={this.onChange}\n              error={this.state.errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter Email...\"\n              value={email}\n              onChange={this.onChange}\n              error={this.state.errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              type=\"text\"\n              name=\"phone\"\n              placeholder=\"Enter Phone...\"\n              value={phone}\n              onChange={this.onChange}\n              error={this.state.errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n    //     }}\n    //   </Consumer>\n    // );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contact: state.contacts.contact\n});\n\nexport default connect(\n  mapStateToProps,\n  { getContact, updateContact }\n)(EditContact);\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport store from './store';\nimport Contacts from './components/Contacts/Contacts';\nimport About from './components/Pages/About';\nimport NotFound from './components/Pages/NotFound';\nimport Header from './components/Header/Header';\nimport AddContact from './components/AddContact/AddContact';\nimport Test from './components/Test/Test';\n\n// import { Provider } from './context';\nimport { Provider } from 'react-redux';\n// import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport EditContact from './components/EditContact/EditContact';\n\nclass App extends Component {\n  render() {\n    // let toggle = false;\n\n    // return React.createElement('div', { className: 'App' }, 'Hello World!');\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about/:id\" component={About} />\n                <Route exact path=\"/about/\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n            {/*\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n         */}\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}