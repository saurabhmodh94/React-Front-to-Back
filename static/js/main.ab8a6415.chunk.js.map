{"version":3,"sources":["context.js","components/Contact/Contact.js","components/Contacts/Contacts.js","components/Pages/About.js","components/Pages/NotFound.js","components/Header/Header.js","components/TextInputGroup/TextInputGroup.js","components/AddContact/AddContact.js","components/Test/Test.js","components/EditContact/EditContact.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","onShowClick","name","e","showContactInfo","onDeleteClick","_ref","delete","t0","console","log","finish","_x","_x2","_this2","_this2$props$contact","phone","email","className","onClick","bind","style","cursor","color","float","Link","to","marginRight","Contacts","Fragment","components_Contact_Contact","About","match","params","NotFound","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","AddContact","errors","defineProperty","target","onSubmit","_this$state","new_contact","preventDefault","abrupt","post","history","push","_this$state2","components_TextInputGroup_TextInputGroup","Test","title","body","fetch","then","json","EditContact","put","App","context_Provider","HashRouter","components_Header_Header","Switch","Route","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ab8a6415.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? action.payload : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n  async componentDidMount() {\n    const response = await axios.get(\n      'https://jsonplaceholder.typicode.com/users'\n    );\n    // .then(response =>\n    //   // handle success\n    //   this.setState({ contacts: response.data })\n    // )\n    // .catch(error =>\n    //   // handle error\n    //   console.log(error)\n    // )\n    // .then(() => {\n    //   // always executed\n    // });\n    this.setState({ contacts: response.data });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Consumer } from '../../context';\n\nexport class Contact extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showContactInfo: true\n    };\n  }\n  // onShowClick(name, e) {\n  //   console.log(e, this.state, name);\n  // }\n  onShowClick = (name, e) => {\n    // console.log(e, this.state, name);\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}/`);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n    // .then(res => dispatch({ type: 'DELETE_CONTACT', payload: id }));\n  };\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          let { id, name, phone, email } = this.props.contact;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4 className=\"list-group-item\">\n                {name}\n                <i\n                  onClick={this.onShowClick.bind(this, name)}\n                  className=\"fas fa-sort-down\"\n                />\n                <i\n                  onClick={this.onDeleteClick.bind(this, id, value.dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', color: 'red', float: 'right' }}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {this.state.showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\"> Phone: {phone}</li>\n                  <li className=\"list-group-item\"> Email: {email}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport { Consumer } from './../../context';\nimport Contact from './../Contact/Contact';\n\nexport class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const contacts = value.contacts;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\n\nexport default props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n      {props.match.params.id}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = props => {\n  let { branding } = props;\n  // const brandingStyle = {\n  //   color: 'red'\n  // };\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n          <a href=\"/\" className=\"navbar-brand\">\n            {branding}\n          </a>\n          <div>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\">\n                  <i className=\"fas fa-home\" /> Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/contact/add\" className=\"nav-link\">\n                  <i className=\"fas fa-plus\" /> Add\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link\">\n                  <i className=\"fas fa-question\" /> About\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      {/*\n        <div style={{ fontSize: '20px' }}>\n          <h1 style={brandingStyle}> {branding} </h1>\n        </div>\n      */}\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'The App'\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={`${error ? 'is-invalid' : ''} form-control form-control-lg`}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport axios from 'axios';\nimport TextInputGroup from './../TextInputGroup/TextInputGroup';\nimport { Consumer } from './../../context';\nclass AddContact extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   // this.nameInput = React.createRef();\n  // }\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    // const name = this.nameInput.current.value;\n    const new_contact = {\n      // id: uuid(),\n      name,\n      email,\n      phone\n    }; //ES6\n    // Check For Errors or Use required\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const response = await axios.post(\n      `https://jsonplaceholder.typicode.com/users/`,\n      new_contact\n    );\n    // .then(res => dispatch({ type: 'ADD_CONTACT', payload: new_contact }));\n    dispatch({ type: 'ADD_CONTACT', payload: response.data });\n\n    // clear state\n    // this.nameInput.current.value = '';\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    //redirect\n    this.props.history.push('/');\n  };\n  static defaultProps = {\n    name: ''\n  };\n  render() {\n    const { name, email, phone } = this.state;\n    // const { name } = this.props;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    // defaultValue={name}\n                    // ref={this.nameInput}\n                    // ref=\"nameInput\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={this.state.errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={this.state.errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    type=\"text\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={this.state.errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n    console.log('componentDidMount...', this.state);\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount...', this.state);\n  }\n\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...');\n  // }\n\n  // componentWillUpdate() {\n  //   console.log('componentWillUpdate...');\n  // }\n\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('componentWillReceiveProps...');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     test: 'something'\n  //   };\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log(' getSnapshotBeforeUpdate...');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    console.log('rendering...', this.state);\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TextInputGroup from './../TextInputGroup/TextInputGroup';\nimport { Consumer } from './../../context';\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const response = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    this.setState({\n      name: response.data.name,\n      email: response.data.email,\n      phone: response.data.phone\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    const new_contact = {\n      name,\n      email,\n      phone\n    }; //ES6\n    // Check For Errors or Use required\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n    const response = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      new_contact\n    );\n    dispatch({ type: 'UPDATE_CONTACT', payload: response.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    //redirect\n    this.props.history.push('/');\n  };\n  static defaultProps = {\n    name: ''\n  };\n  render() {\n    const { name, email, phone } = this.state;\n    // const { name } = this.props;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    // defaultValue={name}\n                    // ref={this.nameInput}\n                    // ref=\"nameInput\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={this.state.errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={this.state.errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    type=\"text\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={this.state.errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/Contacts/Contacts';\nimport About from './components/Pages/About';\nimport NotFound from './components/Pages/NotFound';\nimport Header from './components/Header/Header';\nimport AddContact from './components/AddContact/AddContact';\nimport Test from './components/Test/Test';\n\nimport { Provider } from './context';\n// import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport EditContact from './components/EditContact/EditContact';\n\nclass App extends Component {\n  render() {\n    // let toggle = false;\n\n    // return React.createElement('div', { className: 'App' }, 'Hello World!');\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about/:id\" component={About} />\n                <Route exact path=\"/about/\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n            {/*\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n         */}\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}